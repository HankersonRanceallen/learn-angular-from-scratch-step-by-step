{"ast":null,"code":"/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally\n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n*\n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport let LoopBackConfig = /*#__PURE__*/(() => {\n  class LoopBackConfig {\n    static #_ = this.path = '//0.0.0.0:3000';\n    static #_2 = this.version = 'api';\n    static #_3 = this.authPrefix = '';\n    static #_4 = this.debug = true;\n    static #_5 = this.filterOn = 'headers';\n    static #_6 = this.secure = false;\n    static #_7 = this.withCredentials = false;\n    static setApiVersion(version = 'api') {\n      LoopBackConfig.version = version;\n    }\n    static getApiVersion() {\n      return LoopBackConfig.version;\n    }\n    static setBaseURL(url = '/') {\n      LoopBackConfig.path = url;\n    }\n    static getPath() {\n      return LoopBackConfig.path;\n    }\n    static setAuthPrefix(authPrefix = '') {\n      LoopBackConfig.authPrefix = authPrefix;\n    }\n    static getAuthPrefix() {\n      return LoopBackConfig.authPrefix;\n    }\n    static setDebugMode(isEnabled) {\n      LoopBackConfig.debug = isEnabled;\n    }\n    static debuggable() {\n      return LoopBackConfig.debug;\n    }\n    static filterOnUrl() {\n      LoopBackConfig.filterOn = 'url';\n    }\n    static filterOnHeaders() {\n      LoopBackConfig.filterOn = 'headers';\n    }\n    static isHeadersFilteringSet() {\n      return LoopBackConfig.filterOn === 'headers';\n    }\n    static setSecureWebSockets() {\n      LoopBackConfig.secure = true;\n    }\n    static unsetSecureWebSockets() {\n      LoopBackConfig.secure = false;\n    }\n    static isSecureWebSocketsSet() {\n      return LoopBackConfig.secure;\n    }\n    static setRequestOptionsCredentials(withCredentials = false) {\n      LoopBackConfig.withCredentials = withCredentials;\n    }\n    static getRequestOptionsCredentials() {\n      return LoopBackConfig.withCredentials;\n    }\n  }\n  return LoopBackConfig;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}